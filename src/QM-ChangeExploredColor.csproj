<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFramework>net48</TargetFramework>
		<OutputType>Library</OutputType>
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="Lib.Harmony" Version="2.3.3" />
		<PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
		<PackageReference Include="System.Data.DataSetExtensions" Version="4.5.0" />
	</ItemGroup>
	<PropertyGroup>
		<GAME_NAME>Quasimorph</GAME_NAME>
		<SteamId>3281977248</SteamId>
		<RootNamespace>QM_ChangeExploredColor</RootNamespace>
	</PropertyGroup>
	<PropertyGroup>
		<GAME_PATH Condition="!Exists('$(GAME_PATH)')">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App $(GAME_STEAM_ID)', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GAME_PATH>
		<_SteamLibraryPath>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\SOFTWARE\Valve\Steam', 'SteamPath', null, RegistryView.Registry32))</_SteamLibraryPath>
		<GAME_PATH Condition="!Exists('$(GAME_PATH)') AND '$(_SteamLibraryPath)' != ''">$(_SteamLibraryPath)\steamapps\common\$(GAME_NAME)</GAME_PATH>
		<GAME_PATH Condition="!Exists('$(GAME_PATH)')">C:\Program Files\Steam\steamapps\common\$(GAME_NAME)</GAME_PATH>
		<GAME_PATH Condition="!Exists('$(GAME_PATH)')">C:\Program Files (x86)\Steam\steamapps\common\$(GAME_NAME)</GAME_PATH>
	</PropertyGroup>
	<PropertyGroup>
		<WorkshopPath>$(GAME_PATH)\..\..\workshop\content\2059170\$(SteamId)\</WorkshopPath>
		<ManagedPath>$(GAME_PATH)\$(GAME_NAME)_Data\Managed\</ManagedPath>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.2" />
	</ItemGroup>
	<ItemGroup>
		<Compile Remove="packages\BepInEx.AssemblyPublicizer.MSBuild.0.4.2\contentFiles\cs\any\IgnoresAccessChecksToAttribute.cs" />
	</ItemGroup>
	<ItemGroup>
		<Reference Include="MCM">
			<HintPath>$(GAME_PATH)\..\..\workshop\content\2059170\3469678797\MCM.dll</HintPath>
			<Private>False</Private>
		</Reference>

		<Reference Include="Assembly-CSharp" publicize="true">
			<HintPath>$(ManagedPath)Assembly-CSharp.dll</HintPath>
			<Private>False</Private>
		</Reference>
		<Reference Include="SimpleJSON">
		  <HintPath>$(ManagedPath)SimpleJSON.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine">
			<HintPath>$(ManagedPath)UnityEngine.dll</HintPath>
			<Private>False</Private>
		</Reference>
		<Reference Include="UnityEngine.CoreModule">
			<HintPath>$(ManagedPath)UnityEngine.CoreModule.dll</HintPath>
			<Private>False</Private>
		</Reference>
	</ItemGroup>
	<PropertyGroup>
		<PackageFolder>$(ProjectDir)../package/</PackageFolder>
	</PropertyGroup>

	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
		<Exec Command="@echo off&#xD;&#xA;set deployDir=&quot;$(WorkshopPath)&quot;&#xD;&#xA;&#xD;&#xA;xcopy /f /y &quot;../modmanifest.json&quot; &quot;$(TargetDir)&quot;&#xD;&#xA;&#xD;&#xA;if '$(SteamId)'=='' (echo SteamId in project not set.  Aborting Workshop Deployment &amp;&amp; exit)&#xD;&#xA;echo deploying to %25deployDir%25&#xD;&#xA;&#xD;&#xA;mkdir &quot;$(WorkshopPath)&quot;&#xD;&#xA;&#xD;&#xA;xcopy /f /y &quot;$(ProjectDir)../media/thumbnail.png&quot; %25deployDir%25&#xD;&#xA;xcopy /f /y &quot;$(ProjectDir)../modmanifest.json&quot; %25deployDir%25&#xD;&#xA;&#xD;&#xA;xcopy /f /y   &quot;$(TargetDir)$(TargetName).*&quot; %25deployDir%25&#xD;&#xA;" />
		<ItemGroup>
			<WorkshopSourceFile Include="$(WorkshopPath)*.*" />
			<PackageRemoveFiles Include="$(PackageFolder)$(TargetName)/*.pdb" />
		</ItemGroup>
	</Target>
	<Target Condition="'$(SteamId)'!=''" Name="PostBuildPackage" AfterTargets="PostBuildEvent">
		<ItemGroup>
			<WorkshopSourceFile Include="$(WorkshopPath)*.*" />
			<PackageRemoveFiles Include="$(PackageFolder)$(TargetName)/*.pdb" />
		</ItemGroup>

		<Message Text="---------- Creating Package: $(PackageFolder)$(TargetName)/*.pdb" Importance="high" />
		<RemoveDir Directories="$(PackageFolder)" />
		<Copy SourceFiles="@(WorkshopSourceFile)" DestinationFolder="$(PackageFolder)$(TargetName)"></Copy>
		<Delete Files="@(PackageRemoveFiles)" />
		<ZipDirectory SourceDirectory="$(PackageFolder)" DestinationFile="$(PackageFolder)../$(TargetName).zip" Overwrite="true" />
	</Target>
	<ItemGroup>
	  <Reference Update="System">
	    <Private>False</Private>
	  </Reference>
	</ItemGroup>
	<ItemGroup>
	  <Reference Update="System.Core">
	    <Private>False</Private>
	  </Reference>
	</ItemGroup>
	<ItemGroup>
	  <Reference Update="System.Data">
	    <Private>False</Private>
	  </Reference>
	</ItemGroup>
	<ItemGroup>
	  <Reference Update="System.Drawing">
	    <Private>False</Private>
	  </Reference>
	</ItemGroup>
	<ItemGroup>
	  <Reference Update="System.IO.Compression.FileSystem">
	    <Private>False</Private>
	  </Reference>
	</ItemGroup>
	<ItemGroup>
	  <Reference Update="System.Numerics">
	    <Private>False</Private>
	  </Reference>
	</ItemGroup>
	<ItemGroup>
	  <Reference Update="System.Runtime.Serialization">
	    <Private>False</Private>
	  </Reference>
	</ItemGroup>
	<ItemGroup>
	  <Reference Update="System.Xml">
	    <Private>False</Private>
	  </Reference>
	</ItemGroup>
	<ItemGroup>
	  <Reference Update="System.Xml.Linq">
	    <Private>False</Private>
	  </Reference>
	</ItemGroup>
</Project>